function StateMachine(t){var e={},n=null,r=~~t.debug,a=new function(){var t={};function e(e){r&&console.error("jabche (debug) "+o+": exception caught in state "+n.getName()+": "+e);var a,i=n.getHandler("error");if(!i)throw e;(a=i.getStateLogic())&&a.call(t,e);var c=i.getNextState();s(c),r&&console.error("jabche (debug): "+o+": current state is "+c.getName())}return{register:function(a){t.hasOwnProperty(a)||(t[a]=function(a){return function(a,i){if(!n)throw"StateMachine "+o+": current state must be set!";var c=n.getSubstates(),u=!1;if(c&&c.hasOwnProperty(a)){var f=c[a];try{u=f(i)}catch(t){return e(t),!0}}if(u)return u;var g=n.getHandler(a),l=!0;if(g){var v=g.getNextState(),h=g.getStateLogic();try{if(i.defer=!1,h&&(l=h.call(t,i)),v&&(s(v),r&&console.debug("jabche (debug): "+o+": current state is "+v.getName())),i.defer)return!1}catch(t){return e(t),!0}return l}return!1}(this,a||{})}.bind(a))},getInterface:function(){return t},substates:{}}},i=/^on([A-Z]\S*)([A-Z]\S*)$/,o=t.name||"";function c(t,e,n){return{getStateLogic:function(){return n},getNextState:function(){return e},getName:function(){return t}}}function u(t,e){var n={},r=null,a=null,i=e;return{addHandler:function(t,e,i){var o=new c(t,i,e);switch(n[t]=o,t){case"leave":r=o;break;case"enter":a=o}},getHandler:function(t){return n.hasOwnProperty(t)?n[t]:null},getName:function(){return t},getOnLeave:function(){return r},getOnEnter:function(){return a},getSubstates:function(){return i}}}function s(t){n&&n.getOnLeave()&&n.getOnLeave().getStateLogic()&&n.getOnLeave().getStateLogic().call(a.getInterface());(n=t,t.getOnEnter()&&t.getOnEnter().getStateLogic())&&t.getOnEnter().getStateLogic().call(a.getInterface())}function f(t,n){if(t&&!e[t]){var i=new u(t,a.substates[t]);e[t]=i,n&&(s(i),r&&console.debug("jabche (debug): "+o+": initial state is set to "+i.getName()))}}function g(t){return e[t]}function l(t,e){for(var n in t)if("function"==typeof n){var r=n;e.register(r)}}function v(t){return t.charAt(0).toUpperCase()+t.slice(1)}function h(t,e){return"on"+v(t)+v(e)}function d(t){var e=t.match(i);return!!e&&{state:e[2],event:e[1]}}return function(t){var n=t.transitions,r=t.handlers,i=t.init,c=t.constructor,u=t.substates,s={};a.substates=function(t,e){var n={};for(var r in t){var a=t[r];n[a.parent]=a.statemachine,l(a.statemachine,e)}return n}(u,a),function(t,e,n){for(var r=0;r<t.length;r++){var a=t[r],i=a.from,o=a.to;f(i,e===i),f(o,e===o)}}(n,i);for(var v=0;v<n.length;v++){var S=(N=n[v]).from,b=N.to,m=N.name;if(!S||!b||!m)throw"StateMachine "+o+": transition "+JSON.stringify(n[v])+' has wrong syntax.Expected fields: { name: "someevent", from: "somestate", to: "anotherstate" }';var w=h(m,S);s[w]=!0;var p=r[w],L=g(S),O=g(b);L.addHandler(m,p,O),a.register(m)}for(var m in r)if(!s.hasOwnProperty(m)){var y=d(m);if(y){if(!(L=e[y.state.toLowerCase()]))throw"StateMachine "+o+": handler "+m+" is misprinted or its state is not defined in any transition.Expected syntax: on{$Someevent}{$Anystate}.";var N=y.event.toLowerCase();L.addHandler(N,r[m],null),a.register(N)}}c(a.getInterface())}(t),a.getInterface()}exports.StateMachine=StateMachine;
